test.h

#ifndef TEST_H_
#define TEST_H_

int fun1(int n, int m);

typedef struct CLinkList //结构体
{
	int data;
	struct CLinkList *next;
}node;

int fun2(int, int);


#endif


fun.c

#include<iostream>
#include"test.h"
#include <stdlib.h>
#define N 100
using namespace std;
int a[N],k,j=0;

int fun1(int m, int n)
{
	 

	for (int i = 1; i <= m - 1; i++)
	{
		k = 0;
		while (k < n)
		{
			if (j == m) //数组循环
				j = 0;
			j++;
			if (a[j] == 0)
				k++;
		}
		a[j] = 1;
	}
	for (int i = 1; i <= m; i++)
	{
		if (a[i] == 0)
		{
			cout << "猴子大王是：" << i << "号 " << endl << endl;
			return 0;
		}
	}
	return 0;

}



test.c

#include<iostream>
#include"test.h"
using namespace std;
int main()
{
	int a , n, m;
	cout << "请输入两个整数m和n，其中n<m,输入格式为：m n" << endl;
	cin >> m >> n;
	if (n >= m)
	{
		cout << "输入不合格。" << endl;
		return 0;
	}
	cout << endl;

   //首先使用数组来实现
	cout << "数组实现" << endl;
	fun1(m, n);

   //使用单链表实现
	cout << "单循环链表实现";
	fun2(m, n);



	system("pause");
	return 0;
}
